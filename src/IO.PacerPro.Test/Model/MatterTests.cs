/* 
 * PacerPro
 *
 * PacerPro API documentation.
 *
 * OpenAPI spec version: 0.2.1
 * Contact: ken@pacerpro.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.PacerPro.Api;
using IO.PacerPro.Model;
using IO.PacerPro.Client;
using System.Reflection;

namespace IO.PacerPro.Test
{
    /// <summary>
    ///  Class for testing Matter
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class MatterTests
    {
        // TODO uncomment below to declare an instance variable for Matter
        //private Matter instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Matter
            //instance = new Matter();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Matter
        /// </summary>
        [Test]
        public void MatterInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Matter
            //Assert.IsInstanceOfType<Matter> (instance, "variable 'instance' is a Matter");
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'CaseId'
        /// </summary>
        [Test]
        public void CaseIdTest()
        {
            // TODO unit test for the property 'CaseId'
        }
        /// <summary>
        /// Test the property 'ClientMatterNumber'
        /// </summary>
        [Test]
        public void ClientMatterNumberTest()
        {
            // TODO unit test for the property 'ClientMatterNumber'
        }
        /// <summary>
        /// Test the property 'Judge'
        /// </summary>
        [Test]
        public void JudgeTest()
        {
            // TODO unit test for the property 'Judge'
        }
        /// <summary>
        /// Test the property 'CaseNumber'
        /// </summary>
        [Test]
        public void CaseNumberTest()
        {
            // TODO unit test for the property 'CaseNumber'
        }
        /// <summary>
        /// Test the property 'CaseTitle'
        /// </summary>
        [Test]
        public void CaseTitleTest()
        {
            // TODO unit test for the property 'CaseTitle'
        }
        /// <summary>
        /// Test the property 'NatureOfSuit'
        /// </summary>
        [Test]
        public void NatureOfSuitTest()
        {
            // TODO unit test for the property 'NatureOfSuit'
        }
        /// <summary>
        /// Test the property 'DocketEntries'
        /// </summary>
        [Test]
        public void DocketEntriesTest()
        {
            // TODO unit test for the property 'DocketEntries'
        }
        /// <summary>
        /// Test the property 'ActivityAt'
        /// </summary>
        [Test]
        public void ActivityAtTest()
        {
            // TODO unit test for the property 'ActivityAt'
        }

    }

}
